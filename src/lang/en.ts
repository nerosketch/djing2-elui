export default {
  add: "Add",
  del: "Delete",
  save: "Save",
  saved: "Saved",
  change: "Change",
  deleted: "Deleted successfully",
  title: "Title",
  endDate: "Finish date",
  startDate: "Create date",
  buy: "Buy",
  yes: "Yes",
  no: "No, don't",
  sno: "No",
  comment: "Comment",
  comments: "Comments",
  fixFormErrs: "Fix form errors",
  ipAddress: "IP Address",
  macAddress: "MAC Address",
  addDocument: "Add document",
  defaultCurrencySymbol: "â‚½",
  loading: "Loading ...",
  attention: "Attention",
  view: "View",
  clear: "Clear",
  createDate: "Created",
  notChosen: "Not chosen",
  fieldTagValidation:
    "Tags must contain only letters, numbers and underscores (like [a-zA-Z0-9_]). And can be separated by a comma.",
  telValidation: "+[7,8,9,3] and 10,11 digits",
  customer: "Customer",
  search: 'Search',
  aus2delIpPool: "Are you sure to delete IP pool \"{0}\"?",
  aus2delVlan: 'Are you sure to remove vlan "{0}"?',
  beginTime: 'Begin time',
  download: 'Download',
  customers: {
    afkFilter: "Not active users",
    ipPool: "IP Pool",
    periodicPay: "Periodic pay",
    dateNextPay: "Next payment date",
    lastPay: "Last paycheck",
    nextPay: "Next paycheck",
    calcType: "Type of calculation",
    cost: "Price",
    amount: "Amount",
    addPeriodicPay: "Add periodic pay",
    areUSure2DelPeriodicPay: "Remove the periodic withdrawal?",
    service: "Servicing",
    chooseServiceNecessary: "We have to choose a favor.",
    groupsSuccessAttached: "Groups attached",
    orderShortText: "Order.",
    inSpeed: "Speed",
    outSpeed: "Target speed",
    burst: "Acceleration(burst)",
    attachServices2Groups: "Link services to this group",
    belongingServices2Groups: "Group services",
    buyService: "Buy a favor.",
    customerNotEnoughMoneyDoConnectItQuestion: "Doesn't the subscriber have sufficient means to include the service, to minus it?",
    buyServiceCancellation: "Removal of purchases",
    buyServiceOk: "Service successfully purchased",
    howMuchAddition: "Let's see how much money it takes.",
    additionMoreThanForbidden: "You can't do more than that.",
    withdrawalMoreThanForbidden: "You can't film more than",
    poolsNotExists: "No bullets.",
    badIp: "Wrong.",
    badMac: "Not right.",
    failedGettingFreeIp: "I couldn't find a hip.",
    author: "Author",
    state: "Status",
    type: "Type",
    addCash2Account: "Top up the account",
    was: "It was.",
    become: "Stalo",
    payDate: "Date of payment",
    payWho: "Name",
    accountHasAmounted: "Account filled",
    defaultAuthorName: "System",
    freeSession: "Free the session",
    customerChange: "Change of subscriber",
    customerAdd: "Add the subscriber",
    flags: "Customer flags",
    docs: "Documents",
    session: "Session",
    sessionStartTime: "Start time",
    sessionDuration: "Duration",
    sessionLastUpdate: "latest update",
    sessionInTraf: "Come in.",
    sessionInPkts: "Come in.",
    sessionOutTraf: "Found.",
    sessionOutPkts: "Exodus.",
    sessionNotFound: "No session",
    sessionDetail: "Details",
    serviceAutocontinuation: "Service extension",
    serviceLastConnected: "Last service connected",
    autoContinuationSaved: "Extension retained",
    networking: "Network",
    leaseTime: "Wet time",
    auto: "Road",
    sessionLease: "ip lease",
    areUSure2DelIpLease: "Remove the hip? The subscriber will no longer be able to get a service through this hip.",
    services4Buy: "Order services",
    currentCustomerService: "Current subscription service",
    serviceStartDate: "Start date",
    serviceWorksUntil: "It's working before.",
    serviceFinish: "Complete the service",
    serviceNotConnected: "Service not connected",
    attachedPeriodicPays: "Recurrent payments",
    doFinishServiceAheadOfShedule: "Completion of the subscription?",
    serviceStoppedAheadOfSheduleOk: "Service stopped early",
    phoneOwner: "Telephone owner",
    phone: "Telephone",
    areUShure2DelAdditionalPhone: "Remove the extra phone number?",
    contactNameRequired: "What's the contact name?",
    contactPhoneRequired: "I need a phone number.",
    contactPhoneSaved: "The phone is secure.",
    contactPhoneChanged: "Telephone changed",
    additionalPhones: "Additional telephones",
    addPhone: "Add the phone",
    afkReferenceDate: "Date of report",
    afkOutLimit: "Conclusions",
    afkLastDate: "Date",
    username: "login",
    fio: "FIO",
    surname: "Surname",
    name: "Name",
    lastName: "last name",
    afkDuration: "Duration",
    commentRemoved: "Comment deleted",
    info: "Info",
    taskHistory: "Background",
    balance: "Balance",
    customer: "Subscription",
    formValidatorErrText: "May contain only letters and sign _",
    nameRequiredValidatorErrText: "Name necessarily",
    surnameRequiredValidatorErrText: "Name mandatory",
    birthDay: "Birthday",
    options: "Options",
    gateway: "Access lock",
    additionalInfo: "Dep.",
    passport: "Passport",
    passportLong: "Passport data",
    passportSerial: "Pass series.",
    passportSerialRequiredMsg: "Specify the passport series",
    passportSrialValidationMsg: "The passport series should not be more than four symbols.",
    passportNum: "Pass number.",
    passportNumRequiredMsg: "Give me the passport number.",
    passportNumValidatationMsg: "The passport number shall not be more than 6 symbols.",
    passportDistributor: "Cam",
    passportDistributorRequiredMsg: "Indicate who issued the passport.",
    passportDivisionCode: "Unit code",
    passportDateOfAcceptance: "Date of issue",
    passportDateOfAcceptanceRequiredMsg: "You should indicate when it was issued.",
    password: "Password",
    passwordLong: "Companionate password",
    passwordUpdateOk: "The password has been successfully updated",
    sites: "Sites",
    sitesAccessory: "Facilities",
    siteAccessorySavedOk: "Web content maintained",
    customerSitesAccessory: "Ownership of selected website subscribers",
    usernameRequiredValidatorErrText: "The logic of the subscriber is obligatory.",
    usernameFilterValidatorErrText: "Lagin can contain Latin symbols and figures",
    birthDayRequiredValidatorErrText: "I need to indicate the date of birth.",
    customerSavedOk: "The subscriber is safe.",
    customerAddedOk: "Added",
    customerDeletionConfigmation: "You sure you can remove the subscription? With her, the entire history of the Bling account will be removed.",
    accountRemovedOk: "Record removed",
    streets: "Streets",
    withoutAddrs: "Customers with no address",
    whoHaveRightsOnCustomer: "Who has the rights to a subscriber",
    marker: "Marker",
    customersList: "List of subscribers",
    customerIdNotPassed: "Not transmitted.",
    docLoadFailed: "Erroneous download of documents",
    fullDelTitle: "Complete disposal of the Blingonent &apos; s account",
    isActive: "Active",
    showIsActive: 'Display only active',
    dhcpDynamic: "DHCP",
    clearDevQuestion: "Do you really clean up the subscriber?",
    login: "Login",
    loginFieldRequiredMsg: "The logic of the subscriber is obligatory.",
    loginValidationMessage: "Lagin can contain Latin symbols and figures",
    birthDayValidationMessage: "I need to indicate the date of birth.",
    notPassed: "Not transmitted",
    searchBy: "Search by: {0}",
    phoneCreateTime: 'Create time',
    contractNum: {
      validation: "You need to specify when the contract began to take effect",
      s: "Contract number",
      required: "Contract number required",
      unique: "Contract number(unique)"
    },
    commentText: "Comment text",
    houses: 'Houses',
    // house: 'House',
    // street: 'Street',
    addressFitlers: 'Filters',
    extraFields: "Extra data"
  },
  customersLegal: {
    branch: "Branch (customer)",
    branches: "Branches",
    branchNotAttached: "branches not attached",
    fname: "Name of legal customer",
    tel: "Telephone number",
    addBranch: "Add branch",
    delBranch: "Remove the branch",
    branchDeleted: "branch unattached.",
    bank: {
      title: "Bank name",
      bik: "BIC",
      cacc: "Correspondent account",
      pacc: "Estimate",
      titleRequired: "Bank name mandatory",
      required: "Required.",
      requisites: "Bank requisitions"
    },
    changeInfo: "Change in organizational data"
  },
  nets: {
    ipMustNotBeEmpty: "IP can't be empty.",
    ipLeaseSuccessfullyRemoved: "{0} IP leases removed",
    ipLeaseNotFound: 'Ip lease not found',
    poolRequiredMsg: 'Pool is required',
  },
  groups: {
    minAGroup: "group",
    group_required: "Name of group is required",
    group: "Group",
    failed2GetGroups: "Failed 2 get groups",
    groupIsRequired: 'Group is required'
  },
  addrs: {
    addresses: "Localities",
    addr: "Address",
    full: "Full address",
    typeOfFiasAddress: "Type of FIAS address",
    fiasLevel: "FIAS level",
    aoType: "Type of address object",
  },
  tasks: {
    add: "Add the task",
    adding: "Creating the task",
    edit: 'Edit task "{0}"',
    description: 'Task description: ',
    austRemoveDocument: 'Are you sure to remove file "{0}"?',
    taskCustomerDocTitle: 'Task by "{0}"',
    austRemoveShotPay: 'Are you sure to remove pay "{0}"?',
    austRemoveService: 'Are you sure to remove service "{0}"?',
    austRemovePP: 'Are you sure to remove receipt "{0}"?',
    author: 'Task author: ',
    relevance: "Relevance",
    relevanceTooltip: 'the date by which the task needs to be completed',
    taskStatus: 'Task state',
    challengesAchieved: "Challenges achieved",
    newChallenges: "New challenges",
    failedChallenges: "Failed challenges",
    allTasks: "All tasks",
    allUncompleted: "All uncompleted",
    targetAdded: "Target added",
    targetRetained: "Target retained",
    weHaveToChooseOnePerpetrator: "We have to choose one perpetrator.",
    natureOfFracture: "Nature of fracture",
    modes: {
      title: 'Task mode',
      titlePlural: 'Task modes',
      add: 'Add task mode',
      added: 'New task mode created',
      changed: 'Task mode changed',
    },
    finishDoc: {
      title: 'Task finish document',
      actNum: 'Act number',
      createTime: 'Create time',
      finish_time: 'End time',
      cost: 'Cost',
      added: 'Act created',
      changed: 'Act changed',
      dateTimeReq: 'Time is required',
    }
  },
  devices: {
    dev: "Device",
    port: "Port",
    status: "ONU state: ",
    portSubscribers: "Port subscribers",
    theSwitchboard: "The switchboard",
    informationOfTheDevice: "Information of the device",
    vlanS: "Vlan's",
    tableOfPortAddresses: "Table of port addresses",
    switch: 'Switch',
    serial: "Serial",
    unregisteredUnits: "Unregistered units",
    mac: "Mac addr ",
    affixedSubscribers: "Affixed subscribers: ",
    snmpNum: "SNMP Num.",
    level: "Signal level",
    uptime: "Uptime",
    parentDevice: 'Parent device',
    createTime: 'Create time',
    specifyTheTypeOfDevice: "Specify the type of device",
    specifyParentDevice: 'Specify parent device',
    aus2DelDevice: 'Are you sure to remove device "{0}"?',
    device: "Device.",
    firmwareVersion: "Firmware version",
    fiberAddrRequired: 'fiberAddr required.',
    fiber: 'Fiber',
    signalLevel: "Signal level: ",
    onuStateDescr: 'Onu state',
  },
  route: {
    staff: "Staff",
    addresses: "Addresses",
    organizations: "Organizations",
    customers: "Customers",
    devices: "Devices",
    forms: "Forms",
    finance: "Finance",
    tasks: "Tasks",
    groups: "Groups",
    services: "Services",
    sorm: 'Invalid',
    network: "Network",
    gateways: "Gateways"
  },
  gateways: {
    port: "Port",
    wrong_format_ipv4: "Not the correct format of the IPv4 address."
  },
  contractDocs: {
    addDoc: "Add document",
    docDeleted: "Document deleted",
    docDelFail: "Erroneous document removal",
    docLoadFail: "Erroneous download of documents",
    contractNotPassed: "Not transferred",
    noRepeat: "should not be repeated.",
    copyFromLogin: "Copy that.",
    dateBegin: "Contract start date",
    dateEnd: "Date of termination of contract",
    activity: "Activity",
    activeContract: "Active contract",
    inactiveContract: 'Inactive contract',
    finishBtn: 'Finish',
    finishAlert: "Are you sure you want to finish contract? This is irreversible operation, and you can't restore it, only creating new contract.",
    additional: "Dep.",
    addedMsg: "Treaty",
    savedMsg: "Treaty protected",
    customerContract: "Customers contract",
    noContracts: "No contracts available",
    addCustomerContract: "Add the contract to the subscriber",
    delQuestion: "Remove the contract with the subscriber?",
    finishSuccessText: 'Customer contract successfully finished',
    delOk: "Successfully removed"
  },
  optMenu: {
    home: 'Home',
    reports: 'Reports',
    domains: 'Domain',
    messengers: 'Messengers',
    settings: 'Settings',
    exit: 'Exit'
  },
  profiles: {
    profileGroups: 'Profile groups',
    isSuperuser: "Superuser",
    ifNotActive: 'If you turn off the account, its owner will not be able to log in',
    ifSuperuser: 'If the account has the status of a superuser, then rights are not checked for it, it can do everything',
    ifSupersuerRights: 'As long as the account has the superuser status, then changing the rights for it does not make sense, because superuser rights are not checked, they can do EVERYTHING',
    allRights: 'All rights',
    assignedRights: 'Assigned rights',
    isActive: "Is active",
    readRightsNotFound: "Read rights not found",
    responsibilityForGroups: "Responsibility for groups",
    telephone: "Telephone",
    fio: "FIO",
    nameAndFatherhood: "Name and fatherhood",
    lastLogin: 'Last login',
    lastUpdate: 'Last update',
    levelOfAccess: "Level of access",
    info: "Info",
    selectAll: 'Select all',
    deselectAll: 'Delesect all',
    groupResponsibilityRetained: "Group responsibility retained",
  },
  sites: {
    doDomain: '{0} domain',
    site: "Site",
  },
  networks: {
    tPool: '{0} ip pool',
    austRemoveLease: 'Are you sure to remove lease "{0}"?',
    isDynamic: "Is dynamic",
    network: "Network",
  },
  messenger: {
    botRemoved: 'Messenger "{0}" has been removed',
    austRemove: 'Are you sure to remove the messenger "{0}"?',
  },
  services: {
    doPP: '{0} one-time pay',
    speedIn: 'Input speed',
    speedOut: 'Output speed'
  },
  sorm: {
    withoutPassports: 'Without passports',
    withoutContracts: 'Without contracts',
    tooOld: 'Bad birth day',
  },
  fin: {
    modifyThePaymentGateway: "Modify the payment gateway",
    addGateway: "Add gateway",
    groupByDay: "Group by day",
    groupByMonth: "Group monthly",
    groupByWeek: "Group by week",
    groupByCustomer: 'Group by customers',
    downloadCsv: "Download csv",
    incomeReport: "Income report",
    paymentGateway: "Payment gateway",
    paymentGatewayAdded: "Payment gateway was added",
    createAPayLock: "Create a pay lock",
  },
  noSubscribersFoundOnThePort: "No subscribers found on the port",
  noSubscribersFound: "No subscribers found",
  aborions: "Aborions",
  service: "Service",
  iVeBeenDoingTheSanding: "I've been doing the sanding.",
  admin: "Admin.",
  administration: "Administration",
  administrative: "Administrative",
  addresses: "Addresses",
  accountDeliveryAddress: "Account delivery address",
  EMail: "E-mail address",
  addressOfInstallation: "Address of installation",
  addressObjectAdded: "Address object added",
  rearObjectChanged: "Rear object changed",
  accelerationOfSubscribers: "Acceleration of subscribers",
  active: "Active",
  activeCustomersCount: "Active bon.",
  allRightsReserved: "All rights reserved",
  allocadeBudget: "Allocade Budget",
  ipLeases: "IP leases",
  balance: "Balance",
  baseCalcFunction: "Base account function",
  browser: "Browser",
  price: "Price",
  thePriceShallBePositiveOr0: "The price shall be positive or 0",
  thePriceShallBeSpecified: "The price shall be specified",
  thePriceShouldBeSpecified: "The price should be specified",
  frequencyOfPerformance: "Frequency of performance",
  chatBotIsChanged: "Chat Bot is changed.",
  chatbotIsEstablished: "Chatbot is established",
  somethingFinished: "Something finished.",
  support: "Support",
  date: "Date",
  dateOfEstablishment: "Date of establishment: ",
  areUSuretRemoveGroup: "Are you sure to remove the group",
  birthday: "Birthday",
  targets: "Targets",
  development: "Development",
  devIdRequired: "devId is required.",
  dynamic: "Dynamic",
  addDomain: "Add domain",
  addTheGroup: "Add the group",
  addMassenger: "Add Massenger",
  addIt: "Add it",
  addFields: "Add fields",
  addTheCalculation: "Add the calculation",
  addAnAccountingRecord: "Add an account",
  addTheDevice: "Add the device",
  addendum: "Addendum",
  onlyNumber: "Only number",
  houseNum: "House num",
  domain: "Domain",
  changed: "Changed",
  domenShouldIndicate: "Domen should indicate",
  snmpInfo: "snmp info",
  supplementary: "Supplementary",
  trusted: "Trusted",
  other: "Other",
  singlePayments: "Single payments",
  email: "Email",
  somethingElse: "Something else.",
  spectaped: "Spectaped",
  finance: "Finance",
  fioDirector: "Director's name",
  directorSFioIsRequired: "Director's fig.",
  forms: "Forms",
  photo: "Photo",
  hotel: "Hotel",
  guestSessions: "Guest sessions",
  group: "Group",
  groupAmended: "Group amended",
  groupRetained: "Group retained",
  groupRemoved: "Group removed",
  userGroups: "User groups",
  equipmentNotTransferred: "equipment not transferred",
  name: "Name",
  technologists: "technologists",
  inn: "INN",
  insNeedsToBeFilled: "INS needs to be filled",
  interface: "Interface: ",
  internet: "Internet",
  conflict: "conflict",
  andGoIn: "and go in",
  basedOnByte: "Based on Byte",
  implementers: "Implementers",
  correctFormsOfError: "Correct forms of error",
  correct: "Correct.",
  modificationOfSessions: "Modification of sessions",
  amend: "Amend",
  amendTheGroup: "Amend the group",
  amendIt: "Amend it",
  modifyTheRightsOfTheGroup: "Modify the rights of the group",
  modifyAccessLock: "Modify access lock",
  modifiedTrunkSuccessMode: "Modified Trunk/Success mode",
  iNeedADescription: "I need a description.",
  someOtherProgress: "Some other progress",
  kbytes: "Bytes",
  classOfLock: "Class of lock: ",
  buttons: "Buttons",
  userCnt: "User cnt",
  permcount: "Perms count",
  usercount: "User count",
  paycount: "Payload.",
  count: "Count",
  numberOfPayments: "Number of payments",
  commentDeleted: "Comment deleted",
  ipend: "End ip",
  finalNeedToBeIndicated: "Final need to be indicated",
  redCross: "Red Cross",
  whoSEntitledToAGroupOfSubscribers: "Who's entitled to a group of subscribers",
  whoHasTheRightToAnAccount: "Who has the right to an account.",
  whoHasARightToAService: "Who has a right to a service",
  whoHasTheRightToTheDevice: "Who has the right to the device",
  authorizationLogs: "Authorization logs",
  actionLog: "Action log",
  login: "Login",
  inletLogin: "Inlet login",
  laginCanContainLatinSymbolsAndFigures:
    "Lagin can contain Latin symbols and figures",
  loginCanTBeEmpty: "Login can't be empty.",
  loiPassword: "Loi password",
  macCanTBeEmpty: "Mac can't be empty.",
  weDonTHaveToLeaveTheMobEmpty: "We don't have to leave the mob empty.",
  macAddrFromOLT: "Mac's address from the OLT: ",
  only32Symbols: "32 symbols for servants",
  makers: "Makers",
  marketing: "Marketing",
  messengers: "Messengers",
  mikrotik: "Mikrotik",
  startIp: "Start ip",
  weNeedANewPassword: "We need a new password.",
  iNeedToPointOutTheOldPassword: "I need to point out the old password.",
  onuConfig: "Onu config",
  routeConstruction: "Route construction",
  vlanSettingNotAcceptedBySelectedConfiguration:
    "Vlan setting not accepted by selected configuration",
  entitlementOfUserGroups: "Entitlement of user groups",
  nameForMassengerShouldBeIndicated: "Name for Massenger should be indicated",
  domainNameShouldBeIndicated: "Domain name should be indicated",
  nameOfGroup: "Name of group",
  nameShouldBeIndicated: "Name should be indicated",
  nameToBeIndicated: "Name to be indicated",
  nameOfPayment: "Name of payment",
  theNameOfTheVlanShouldBeIndicated: "The name of the vlan should be indicated",
  notFound: "Not found",
  notSpecified: "not specified",
  notDefined: "Not defined",
  notTransferred: "Not transferred",
  doesnTSoundLikeEMailAddress: "Doesn't sound like an e-mail address.",
  notRemoved: "Not removed, it looks like someone's already removed.",
  notSelected: "Not selected",
  insufficientRights: "Insufficient rights",
  low: "Low",
  contractCanContainLatinAndDigits:
    "The contract number may contain Latin symbols and figures",
  telephoneNumber: "Telephone number",
  phoneNumberIsRequired: "The phone number is mandatory.",
  new: "New",
  newGroupAdded: "New group added",
  theNewONUIsSaved: "The new ONU is saved.",
  newDeviceRetained: "New device retained",
  newDomain: "New Domain",
  newPassword: "New password",
  needsLoginFromLatinSymbolsAndFigures:
    "Needs login from Latin symbols and figures.",
  weNeedToNameThePort: "We need to name the port.",
  weNeedALegalAddress: "We need a legal address.",
  weNeedToPickASubscription: "We need to pick a subscription.",
  weNeedToSelectTheRightTypeOfJuriqueFromTheListOfValues:
    "We need to select the right type of jurique from the list of values.",
  weNeedToPickAType: "We need to pick a type.",
  weNeedToPickAFiasType: "We need to pick a FIAS type.",
  weNeedToPickALevel: "We need to pick a level.",
  youNeedToKnowTheNameOfTheOwnerOfTheAccount:
    "You need to know the name of the owner of the account.",
  iNeedToKnowWhatApiWillBeWorkingWith:
    "I need to know what api will be working with.",
  equipment: "Equipment",
  equipmentNotFound: "Equipment not found",
  cableBreaking: "Cable breaking",
  iWill: "I will.",
  cable: "cable",
  okay: "Okay.",
  successfulRegistered: "successful registered",
  description: "Description ",
  descriptionMandatory: "Description mandatory",
  payments: "Payments",
  monitoringEventAlerts: "Monitoring event alerts",
  notices: "Notices",
  organizations: "Organizations",
  organization: "Organization",
  stopTheWebSite: "Stop the web site",
  allReports: "All reports",
  cancellation: "Cancellation",
  sendWebHoseUrn: "Send web hose urn",
  parametersRiver: "Parameters river",
  password: "password",
  inletPassword: "Inlet password",
  thePasswordCannotBeEmpty: "The password cannot be empty",
  thePasswordConsistsOfAMinimumOf6Symbols:
    "The password consists of a minimum of 6 symbols",
  thePasswordHasBeenChangedSuccessfully:
    "The password has been changed successfully",
  thePasswordsShouldMatch: "The passwords should match.",
  passport: "Passport",
  recurrentPayments: "Recurrent payments",
  periodicMissing: "periodic missing",
  ping: "ping",
  default: "Default",
  postalAddress: "Postal address",
  postalIndex: "Postal index",
  postalAccountDeliveryAddressIndex: "Postal account delivery address index",
  postalAddressIndex: "Postal address index",
  thePostalIndexContainsNotMoreThan6Symbols: "The postal index contains not more than 6 symbols",
  postalLegalAddressIndex: "Postal legal address index",
  connection: "connection",
  bottomDetails: "Bottom details",
  weNeedToSign: "We need to sign.",
  substanceRetained: "Substance retained",
  substanceRemoved: "Substance removed",
  subnets: "Subnets",
  subnet: "Subnet",
  field: "Field",
  fieldRemoved: "Field removed",
  use: "Use.",
  serviceUsers: "Service users",
  userTag: "User Tag",
  changeThePassword: "Change the password",
  port: "Port",
  portShouldContainUniqueVlans: "Port should contain unique vlans",
  notTransmitted: "not transmitted",
  portCanTContainMoreThanOneAcques: "Port can't contain more than one acques.",
  portSuccessfullyChanged: "Port successfully changed",
  portHasBeenSuccessfullyStored: "Port has been successfully stored.",
  portSuccessfullyRemoved: "Port successfully removed",
  portNo: "Port No.",
  parameterAndRiver: "parameter and river",
  last3Months: "Last 3 months",
  lastMonth: "Last month",
  lastWeek: "Last week",
  repeatThePassword: "Repeat the password.",
  groupRightsRetained: "Group rights retained",
  rightsRetained: "Rights retained",
  rightsToClassesOfAction: "Rights to classes of action",
  apply: "Apply",
  example192168023: "Example: 192.168.0.23",
  exampleMac: "Example: 0a:0b:cc:dd:ee:ff",
  example1921680024: "Example: 192.168.0.0/24",
  exampleOfLock19216801: "Example of lock: 192.168.0.1",
  theOwnershipOfThe: "The ownership of the",
  maintenanceOfWebsiteEquipment: "Maintenance of website equipment",
  facilitiesMaintained: "Facilities maintained",
  theContentOfThePayloadableSiteIsMaintained: "The content of the payloadable site is maintained",
  webOwnershipMaintained: "Web ownership maintained",
  facilities: "Facilities",
  webRecordsMaintained: "Web records maintained",
  theOwnershipOfTheTypeOfPaymentsToWebsitesIsMaintained: "The ownership of the type of payments to websites is maintained",
  priority: "Priority: ",
  loss: "Loss",
  path: "Path",
  distributionOfServicesBySubscribers: "Distribution of services by subscribers",
  edit: "Edit",
  regime: "Regime",
  parentDev: "Parent device: ",
  withAdministrativeServices: "With administrative services",
  freeServices: "Free services",
  withServices: "With services",
  sÃ¡les: "SÃ¡les",
  secret: "secret",
  id: "Id",
  iLlBeSure: "I'll be sure.",
  sessionChanged: "Session changed",
  sessionRemoved: "Session removed",
  configurationPanel: "Configuration panel",
  onuConfigTemplate: "ONU config template",
  gateway: "Gateway",
  accessLockSecure: "Access lock secure",
  accessLockSuccessfullyRemoved: "Access lock successfully removed",
  youNeedToPointOutTheLock: "You need to point out the lock.",
  locks: "Locks",
  systemTag: "System tag",
  copyTheAddressFromTheLegalAddress: "Copy the address from the legal address.",
  speedShallBePositive: "Speed shall be positive",
  scream: "Scream",
  weakSpeed: "weak speed",
  slug: "Slug",
  watch: "Watch",
  community: "Community",
  safe: "Safe.",
  keepHimSafe: "Keep him safe.",
  status: "Status: ",
  creatingTheChallenge: "Creating the challenge",
  createAMassenger: "Create a Massenger",
  heSInTheEye: "He's in the eye.",
  average: "Average",
  startPoint: "Start point",
  oldPassword: "Old password",
  value: "Value",
  amount: "Amount",
  daily: "Daily",
  tariffs: "Tariffs",
  idEcspectedRumBaccand: "Id ecspected rum baccand",
  currentWebHook: "current web hook:",
  type: "Type",
  typeOfBean: "Type of bean",
  likeUs: "Like us.",
  typeOfEquipment: "Type of equipment",
  typeOfField: "Type of field",
  typeOfNetwork: "Type of network",
  typeOfLegal: "Type of legal",
  theTypeOfLawnIsMandatory: "The type of legal is mandatory",
  token: "Token",
  messengerTokenShouldBeIndicated: "Messenger Token should be indicated",
  justLatin: "Just Latin.",
  added: "Added",
  recordRetained: "Record retained",
  recordsRemoved: "Records removed",
  records: "Records",
  removeSubscribersGroup: "Are you sure to remove subscribers group?",
  removeOptsFromPort: "Remove settings from the port?",
  removePayGWQuestion: "Remove the pay gateway?",
  deleteTheField: "Delete the field",
  removeFromOLT: "Remove from olt",
  removeGatewayQuestion:
    "Are you sure you want to remove the gateway for the subscribers?",
  removeAccountQuestion: "Remove the record?",
  speedOut: "Speed out",
  giveTheDeviceAName: "Give the device a name.",
  speedIn: "Speed in.",
  iDid: "I did.",
  office: "Office",
  acceleration: "Acceleration",
  serviceChanged: "Service changed",
  serviceEstablished: "Service established",
  serviceRemoved: "Service removed",
  successfullyMaintained: "Successfully maintained",
  noDeviceTransmittedToTheButton: "No device transmitted to the button",
  ONUConfigurationOptions: "ONU configuration options",
  eternalService10Years: '"Eternal" service (10 years)',
  entry: "Entry",
  comeIn: "Come in.",
  incomingByte: "Incoming Byte",
  incomingPackets: "Incoming packets",
  outgoingPackets: "Outgoing packets",
  bulk: "Bulk",
  included: "Included",
  including: "Including",
  "2-4094": "Vlan can be in range 2-40942-4094",
  weReCleared: "We're cleared.",
  timeLeft: "Time left: ",
  time: "Time",
  lastUpdate: "Last update",
  leasingTime: "Leasing time",
  startTime: "Start time",
  total: "Total",
  itSABonus: "It's a bonus.",
  chooseTheMassengerType: "Choose the massenger type.",
  issued: "Issued",
  giveReadingRights: "Give reading rights",
  implemented: "Implemented",
  higher: "Higher",
  administrativeServices: "Administrative services.",
  itSAMoronOfControl: "It's a moron of control.",
  legalAddress: "Legal address",
  targetValidUntil: "Target valid until: ",
  theTaskWillBeRemovedNowCarefully: "The task will be removed now, carefully.",
  targetRemoved: "Target removed",
  targetCompleted: "Target completed",
  complete: "Complete",
  areYSureFinishSession: "Are y sure you want to finish the session?",
  yellowTriangle: "yellow triangle"
};
